{"version":3,"sources":["logo.svg","util/Menu.js","util/Search.js","util/Artist.js","util/Track.js","Components/Music.js","Components/About.jsx","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","data-toggle","data-target","id","Search","props","state","artist","onChangeArtist","bind","submitHandler","e","this","setState","target","value","preventDefault","search","method","onSubmit","htmlFor","type","name","onChange","onClick","Component","Artist","images","genres","followers","src","url","alt","join","total","Track","playing","audio","playingPreviewUrl","trackUrl","Audio","pause","play","s","sec","min","tracks","map","item","key","album","duration_ms","preview_url","playAudio","msToTime","trackIcon","API_URI","Music","searchArtist","artistQuery","fetch","then","response","json","result","console","log","artists","items","catch","err","About","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.42e8d10e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Menu(){\r\n    return(\r\n        <nav className=\"navbar navbar-inverse\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-header\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">Music Player</Link>\r\n                    <button className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#menu\">\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"navbar-collapse collapse\" id=\"menu\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li>\r\n                            <Link to=\"/music\">Music</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/contact\">Contact</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            artist: ''\r\n        };\r\n        this.onChangeArtist = this.onChangeArtist.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n    onChangeArtist(e){\r\n        this.setState({\r\n            artist: e.target.value\r\n        })\r\n    }\r\n    submitHandler(e){\r\n        e.preventDefault(); //avoid page refresh on submit\r\n        this.props.search(this.state.artist);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                    <form method=\"post\" onSubmit={this.submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Search Album or Artist className</label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-addon\">\r\n                                    <span className=\"glyphicon glyphicon-user\"></span>\r\n                                </div>\r\n                                <input type=\"text\" name=\"artist\"  className=\"form-control\" value={this.state.artist} onChange={this.onChangeArtist}/>\r\n                                <div className=\"input-group-btn\">\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={this.submitHandler}>\r\n                                        <span className=\"glyphicon glyphicon-search\"></span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Artist(props) {\r\n    if (!props.artist) return null;\r\n    const { name, images, genres, followers } = props.artist;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-offset-3\">\r\n                <div className=\"panel panel-primary text-center\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">{name}</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <img src={images[1].url} alt={name} className=\"img-responsive img-circle\" />\r\n                        <hr />\r\n                        <p className=\"text-warning\"> {genres.join(\",\")} </p>\r\n                    </div>\r\n                    <div className=\"panel-footer\">\r\n                        <p className=\"text-info\">Followers: {followers.total}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Track extends Component {\r\n    state = {\r\n        playing:false,\r\n        audio:null,\r\n        playingPreviewUrl:null,\r\n    };\r\n\r\n    playAudio(trackUrl){\r\n        //const audio\r\n        const audio = new Audio(trackUrl);\r\n\r\n        if(!this.state.playing){\r\n            //play\r\n            audio.play();\r\n            this.setState({playing: true, audio, playingPreviewUrl: trackUrl});\r\n        }\r\n        else{\r\n            //pause\r\n            this.state.audio.pause();\r\n\r\n            if(this.state.playingPreviewUrl === trackUrl){\r\n                this.setState({playing: false});\r\n            }\r\n            else{\r\n                //from pause to play\r\n                audio.play();\r\n                this.setState({audio, playingPreviewUrl: trackUrl});\r\n            }\r\n        }\r\n    }\r\n\r\n    trackIcon(trackUrl){\r\n        if(!trackUrl){\r\n            return <span className=\"text-danger\"> N/T </span>\r\n        }\r\n        if(this.state.playing && this.state.playingPreviewUrl === trackUrl){\r\n            //audio is in play state\r\n            return <span className=\"glyphicon glyphicon-pause\"></span>\r\n        }\r\n        return <span className=\"glyphicon glyphicon-play-circle\"></span>\r\n    }\r\n\r\n    //convert ms to hh:mm:ss\r\n    msToTime(s){\r\n        var ms = s % 1000;\r\n        s = (s - ms) / 1000;\r\n        var sec = s % 60;\r\n        s = (s - sec) / 60;\r\n        var min = s % 60;\r\n        var hrs = (s - min) / 60;\r\n        return `${hrs}h:${min}m:${sec}s`;\r\n\r\n    }\r\n    render() {\r\n        if(!this.props.tracks) return null;\r\n        return (\r\n            <div className=\"row\">\r\n                {this.props.tracks.map((item,key) => {\r\n                    const {name, album, duration_ms, preview_url} = item;\r\n                    return(\r\n                        <div className=\"col-md-4 col-sm-6 col-xs-12\" key={key}>\r\n                            <div className=\"panel panel-primary\" onClick={() => this.playAudio(preview_url)}>\r\n                                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\"> {name}</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                            <img src={album.images[1].url} alt={name} className=\"img-responsive img-circle\" />\r\n                            <hr/>\r\n                    <p className=\"text-info\">Time {this.msToTime(duration_ms)}</p>\r\n                                </div>\r\n                                <div className=\"panel-footer\">\r\n                    <h3 className=\"text-info\">{this.trackIcon(preview_url)}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Search from \"../util/Search\";\r\nimport Artist from '../util/Artist';\r\nimport Track from '../util/Track';\r\nconst API_URI = \"https://spotify-api-wrapper.appspot.com\";\r\n\r\nexport default class Music extends Component {\r\n    state = {\r\n        artist: \"\",\r\n        tracks: [],\r\n    };\r\n    componentWillMount(){\r\n        this.searchArtist(\"Sonu Nigam\");\r\n    }\r\n    searchArtist = (artistQuery) => { \r\n        fetch(`${API_URI}/artist/${artistQuery}`)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            if(result.artists.total > 0){\r\n                const artist= result.artists.items[0];\r\n                                    // artist: artist,\r\n                    // if both sides are same, can write only once like below\r\n                this.setState({\r\n                    artist\r\n                });\r\n                //logic for fetching tracks\r\n                fetch(`${API_URI}/artist/${artist.id}/top-tracks`)\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                    console.log(\"result tracks\", result.tracks);\r\n                    this.setState({\r\n                        tracks: result.tracks,\r\n                    });\r\n                })\r\n                .catch((err) => console.log(err));\r\n                //end tracks logic\r\n            }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>Spotify API Powered Music Player</h3>\r\n                    </div>\r\n                </div>\r\n                <Search search={this.searchArtist}/>\r\n                <Artist artist={this.state.artist}/>\r\n                <Track tracks={this.state.tracks}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>About Music Player</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>Contact Us</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Menu from './util/Menu';\nimport Music from './Components/Music';\nimport About from './Components/About';\nimport Contact from './Components/Contact';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Menu/>\n    <Switch>\n    <Route exact path=\"/\" component={Music}/>\n      <Route exact path=\"/music\" component={Music}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route exact path=\"/contact\" component={Contact}/>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}